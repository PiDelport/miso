name: test matrix
on:
  push:
  pull_request:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
        - os: macos-latest
          TARGET: x86_64-apple-darwin
          COMPILER: clang
          LINKER: clang
        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl
          COMPILER: gcc
          LINKER: gcc

    steps:
    - run: echo ${{matrix.TARGET}}
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        name: miso-haskell
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        extra_nix_config: |
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          substituters = https://hydra.iohk.io https://cache.nixos.org/
    - run: echo ${{matrix.os}}
    - run: nix-env -iA cachix -f https://cachix.org/api/v1/install
    - run: cachix use miso-haskell
    - run: nix-build -A pkgs.yarn default.nix && nix-env -i ./result
    - run: nix-build
    - run: cd tests && yarn && yarn test
